@use "app/styles/section-color.scss" as section-color;
@use "app/tags/app-header/app-header.style.module.scss" as header;

#left,
#right {
  position: sticky;
  flex-direction: column;
  flex-shrink: 0;
  width: 12rem;
  top: 0;
  max-height: 100dvh;
  display: none;
  @container style(--stick-top) {
    animation: sticky linear both;
    animation-timeline: --stick-subject;
    animation-range: exit 0% exit 100%;
    margin-top: calc(-1 * header.$height);
    transform-origin: top;
    transform: translateY(header.$height) scaleY(var(--stick-scale));
    will-change: transform;
    @keyframes sticky {
      to {
        transform: translateY(0) scaleY(1);
      }
    }

    > * {
      animation: sticky linear both;
      animation-timeline: --stick-subject;
      animation-range: exit 0% exit 100%;
      transform-origin: top;
      transform: scaleY(calc(1 / var(--stick-scale)));
      will-change: transform;
    }
  }
}
#left {
  @media (min-width: 48rem) and (min-height: 38rem) {
    display: flex;
  }
}
#right {
  @media (min-width: 64rem) and (min-height: 38rem) {
    display: flex;
  }
}

#siteNav,
#pageNav {
  padding: 2.5rem 0;
  font-size: 0.9rem;
  flex: 1;
  overflow-y: auto;

  ul {
    display: flex;
    flex-direction: column;
    list-style-type: none;
  }

  li {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  a {
    color: var(--color-foreground);
    font-weight: 400;
    line-height: 1.6;
    text-decoration-thickness: 2px;
    text-underline-offset: calc(25% - 2px);

    &[aria-current="true"] {
      padding-left: 0.5rem;
      border-left: 2px solid var(--color-red-light);
    }
  }

  strong {
    font-weight: 500;
    text-transform: uppercase;
    color: var(--color-red-light);
  }
}

#siteNav {
  > ul {
    gap: 1rem;
  }
}

#pageNav {
  & ul ul {
    padding-left: 1rem;
  }
}

#controls {
  display: flex;
  gap: 0.5rem;
  flex-direction: column;
  padding: 1.5rem 0;
  margin-top: auto;
  background-color: var(--color-background);
  &::before {
    content: "";
    z-index: -1;
    pointer-events: none;
    position: absolute;
    top: -2rem;
    left: 0;
    width: 100%;
    height: 2rem;
    background: linear-gradient(to top, var(--color-background), transparent);
  }
  strong {
    color: var(--color-foreground);
    font-weight: 700;
  }
}

#article {
  flex: 1;
  padding: 2.5rem 0;
  line-height: 1.5;
  min-width: 0;

  @include section-color.set("red");

  $i: 1;
  @each $color in "blue", "yellow", "green" {
    & > section:nth-of-type(4n + #{$i}) {
      @include section-color.set($color);
    }
    $i: $i + 1;
  }

  section {
    scroll-margin-top: header.$height;
    & > *:last-child {
      margin-bottom: 0;
    }
  }

  h1 {
    color: var(--color-red-light);
    margin-bottom: 1.3rem;
    line-height: 100%;
  }

  h2,
  h3,
  h4,
  h5,
  h6 {
    color: var(--section-color);
    margin-bottom: 1.3rem;
  }

  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-top: 1.5em;

    a {
      &:hover {
        text-decoration: none;

        &::before {
          color: var(--section-color);
        }
      }

      &::before {
        content: "#";
        position: absolute;
        top: 50%;
        left: 0;
        padding-right: 0.5rem;
        translate: -100% -50%;
        color: var(--section-color-dim);
        font-size: 0.75em;
      }
    }
  }

  p {
    margin-bottom: 1.3rem;
  }

  ul,
  ol {
    margin-bottom: 1.3rem;
    padding-left: 1rem;
  }

  li::marker {
    color: var(--section-color);
    font-size: 1.2rem;
  }

  li + li {
    margin-top: 0.8rem;
  }

  pre,
  code {
    margin: 2rem 0;
  }

  hr {
    border: 1px solid var(--section-color-dim);
    margin: 3rem 0;
  }
}

#contributors {
  ul {
    display: flex;
    list-style-type: none;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 0;

    & > li > a {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      text-decoration: none;
      color: var(--color-foreground);
      font-size: x-small;

      & > :first-child {
        width: 5rem;
        height: 5rem;
        border-radius: 50%;
        border: 2px solid var(--section-color);
        display: flex;
        justify-content: center;
        align-items: center;

        svg {
          height: 2rem;

          path {
            fill: var(--section-color);
          }
        }
      }
    }
  }
}

:global {
  .marko-codespan__tag {
    &::before {
      content: "<";
    }

    &::after {
      content: ">";
    }
  }

  .marko-codespan__attribute::after {
    content: "=";
  }

  #syntax-legend pre {
    border: none;
    font-size: 1.3rem;
    background-color: var(--section-color-dim);
    border-radius: 1rem;
    padding: 1.5rem;
    width: 100%;
    max-width: 100% !important;
  }

  .markdown-alert {
    position: relative;
    margin: 2rem 0;
    border: 1px solid var(--section-color);
    background-color: var(--color-background);
    padding: 1rem;
    padding-bottom: 0;
    border-radius: 1rem;

    &::before {
      position: absolute;
      z-index: -1;
      inset: 0;
      transform-origin: bottom;
      transform: scale(0.9, 0.7);
      content: "";
      background-color: var(--section-color-dim-alt);
      filter: blur(50px);
      opacity: 0.2;
    }

    @media (min-width: 48rem) {
      padding: 1.5rem;
      padding-bottom: 1rem;
    }

    pre,
    code {
      margin: 1.3rem 0;
    }
  }

  .markdown-alert-title {
    color: var(--section-color);
    display: flex;
    gap: 0.5rem;
    align-items: center;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 0.7rem;

    svg {
      fill: currentColor;
    }
  }

  @each $name,
    $color
      in (
        "caution": "red",
        "note": "blue",
        "tip": "yellow",
        "important": "green",
        "warning": "gray"
      )
  {
    .markdown-alert-#{$name} {
      @include section-color.set($color, true);
    }
  }
}
