@mixin section-colors($color, $dark: false) {
  --section-color-dark: var(--color-#{$color}-dark);
  --section-color-light: var(--color-#{$color}-light);

  @if $dark and $color != "blue" {
    --section-color-dim: light-dark(
      var(--color-#{$color}-dark-tint),
      var(--color-#{$color}-dark-shade)
    );
    --section-color-dim-alt: light-dark(
      var(--color-#{$color}-dark-shade),
      var(--color-#{$color}-dark-tint)
    );
    --section-color-alt-dim: light-dark(
      var(--color-#{$color}-light-tint),
      var(--color-#{$color}-light-shade)
    );
    --section-color-alt-dim-alt: light-dark(
      var(--color-#{$color}-light-shade),
      var(--color-#{$color}-light-tint)
    );

    --section-color: var(--color-#{$color}-dark);
    --section-color-alt: var(--color-#{$color}-light);
  } @else {
    --section-color-dim: var(--color-#{$color}-dim);
    --section-color-dim-alt: var(--color-#{$color}-dim-alt);
    --section-color-alt-dim: var(--color-#{$color}-alt-dim);
    --section-color-alt-dim-alt: var(--color-#{$color}-alt-dim-alt);
    --section-color: var(--color-#{$color});
    --section-color-alt: var(--color-#{$color}-alt);
  }
}

.doc {
  display: grid;
  grid-template-areas: "main";
  grid-template-columns: minmax(0, 1fr);

  @media (min-width: 48rem) {
    gap: 2.5rem;
    grid-template-columns: 12rem minmax(0, 1fr);
    grid-template-areas: "left main";
  }

  @media (min-width: 64rem) {
    grid-template-columns: 12rem minmax(0, 1fr) 12rem;
    grid-template-areas: "left main right";
  }
}

main {
  grid-area: main;

  > section {
    @include section-colors("red");

    $i: 1;
    @each $color in "blue", "yellow", "green" {
      & > section:nth-of-type(4n + #{$i}) {
        @include section-colors($color);
      }
      $i: $i + 1;
    }
  }

  section > *:last-child {
    margin-bottom: 0;
  }

  h1 {
    color: var(--color-red-light);
    margin-bottom: 1.3rem;
  }

  h2,
  h3,
  h4,
  h5,
  h6 {
    color: var(--section-color);
    margin-bottom: 1.3rem;
  }

  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-top: 1.5em;

    a {
      &:hover {
        text-decoration: none;

        &::before {
          color: var(--section-color);
        }
      }

      &::before {
        content: "#";
        position: absolute;
        top: 50%;
        left: 0;
        padding-right: 0.5rem;
        translate: -100% -50%;
        color: var(--section-color-dim);
        font-size: 0.75em;
      }
    }
  }

  p {
    margin-bottom: 1.3rem;
  }

  ul,
  ol {
    margin-bottom: 1.3rem;
    padding-left: 1rem;
  }

  li::marker {
    color: var(--section-color);
    font-size: 1.2rem;
  }

  li + li {
    margin-top: 0.8rem;
  }

  pre,
  code {
    margin: 2rem 0;
  }

  hr {
    border: 1px solid var(--section-color-dim-alt);
    margin: 3rem 0;
  }
}

.docNav,
.tocNav {
  flex-direction: column;
  font-size: 0.9rem;
  display: none;

  ul {
    display: flex;
    flex-direction: column;
    list-style-type: none;
  }

  li {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  a {
    color: var(--color-foreground);
    font-weight: 400;
    line-height: 1.6;
    text-decoration-thickness: 2px;
    text-underline-offset: calc(25% - 2px);

    &[aria-current="true"] {
      padding-left: 0.5rem;
      border-left: 2px solid var(--color-red-light);
    }
  }

  strong {
    font-weight: 500;
    text-transform: uppercase;
    color: var(--color-red-light);
  }
}

.docNav {
  grid-area: left;
  gap: 1rem;
  @media (min-width: 48rem) {
    display: flex;
  }

  > ul {
    gap: 1rem;
  }

  .docNavControls {
    display: flex;
    gap: 0.5rem;
    flex-direction: column;
    position: sticky;
    bottom: 1rem;
    margin-top: auto;
    background-color: var(--color-background);

    strong {
      color: var(--color-foreground);
      font-weight: 700;
    }
  }
}

.tocNav {
  grid-area: right;
  @media (min-width: 64rem) {
    display: flex;
  }

  & ul ul {
    padding-left: 1rem;
  }
}

:global(.marko-codespan__tag) {
  &::before {
    content: "<";
  }

  &::after {
    content: ">";
  }
}

:global(.marko-codespan__attribute) {
  &::after {
    content: "=";
  }
}

/* Alerts */

:global(.markdown-alert) {
  position: relative;
  margin: 2rem 0;
  border: 1px solid var(--section-color);
  background-color: var(--color-background);
  padding: 1rem;
  padding-bottom: 0;
  border-radius: 1rem;
  
  &::before {
    position: absolute;
    z-index: -1;
    inset: 0;
    transform-origin: bottom;
    transform: scale(0.9, 0.7);
    content: "";
    background-color: var(--section-color-dim-alt);
    filter: blur(50px);
    opacity: 0.2;
  }
  
  @media (min-width: 48rem) {
    padding: 1.5rem;
    padding-bottom: 1rem;
  }

  pre,
  code {
    margin: 1.3rem 0;
  }
}

:global(.markdown-alert-title) {
  color: var(--section-color);
  display: flex;
  gap: 0.5rem;
  align-items: center;
  text-transform: uppercase;
  font-weight: 700;
  margin-bottom: 0.7rem;

  svg {
    fill: currentColor;
  }
}

@each $name,
  $color
    in (
      "caution": "red",
      "note": "blue",
      "tip": "yellow",
      "important": "green",
      "warning": "gray"
    )
{
  :global(.markdown-alert-#{$name}) {
    @include section-colors($color, true);
  }
}

/* Contributors */

#contributors ul {
  display: flex;
  list-style-type: none;
  flex-wrap: wrap;
  gap: 1rem;
  padding: 0;
}

#contributors ul > li > a {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-decoration: none;
  color: var(--color-foreground);
  font-size: x-small;
}

#contributors ul > li > a > :first-child {
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
  border: 2px solid var(--section-color);
  display: flex;
  justify-content: center;
  align-items: center;

  svg {
    height: 2rem;

    path {
      fill: var(--section-color);
    }
  }
}

:global(#syntax-legend) pre {
    border: none;
    font-size: 1.3rem;
    background-color: var(--section-color-dim);
    border-radius: 1rem;
    padding: 1.5rem;
    width: 100%;
    max-width: 100% !important;
}