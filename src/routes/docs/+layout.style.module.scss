@use "app/styles/section-color.scss" as section-color;
@use "app/tags/app-header/app-header.style.module.scss" as header;

:global(#root) {
  padding-inline: 1rem;
  max-width: 82rem;
}

main {
  flex-direction: row;
}

@media (min-width: 48rem) and (min-height: 38rem) {
  :global(#site-menu) {
    display: flex;
  }
}
@media (min-width: 64rem) and (min-height: 38rem) {
  :global(#page-menu) {
    display: flex;
  }
}

#pageNav {
  & ul ul {
    padding-left: 1rem;
  }
}

#article {
  flex: 1;
  padding: 2.5rem 0;
  line-height: 1.5;
  min-width: 0;

  @include section-color.set("red");

  $i: 1;
  @each $color in "blue", "yellow", "green" {
    & > section:nth-of-type(4n + #{$i}) {
      @include section-color.set($color);
    }
    $i: $i + 1;
  }

  section {
    scroll-margin-top: header.$size;
    & > :last-child {
      margin-bottom: 0;
    }
  }

  h1 {
    color: var(--color-red-light);
    margin-bottom: 1.3rem;
    line-height: 100%;
  }

  h2,
  h3,
  h4,
  h5,
  h6 {
    color: var(--section-color);
    margin-top: 1.5em;
    margin-bottom: 1.3rem;

    > a {
      &:hover {
        text-decoration: none;

        &::before {
          color: var(--section-color);
        }
      }

      &::before {
        @media (min-width: 48rem) {
          position: absolute;
          display: inline-block;
          content: "#";
          text-wrap: nowrap;
          padding-right: 0.5rem;
          color: var(--section-color-dim);
          scale: 0.75;
          top: 50%;
          left: 0;
          translate: -100% -50%;
        }
      }
    }
  }

  p {
    margin-bottom: 1.3rem;
  }

  ul,
  ol {
    list-style-position: inside;
    margin-bottom: 1.3rem;
  }

  li::marker {
    color: var(--section-color);
    font-size: 1.2rem;
  }

  li + li {
    margin-top: 0.8rem;
  }

  pre,
  code {
    margin: 2rem 0;
  }

  hr {
    border: 1px solid var(--section-color-dim);
    margin: 3rem 0;
  }
}

#contributors {
  ul {
    display: flex;
    list-style-type: none;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 0;

    & > li > a {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      text-decoration: none;
      color: var(--color-foreground);
      font-size: x-small;

      & > :first-child {
        width: 5rem;
        height: 5rem;
        border-radius: 50%;
        border: 2px solid var(--section-color);
        display: flex;
        justify-content: center;
        align-items: center;

        svg {
          height: 2rem;

          path {
            fill: var(--section-color);
          }
        }
      }
    }
  }
}

:global {
  .marko-codespan__tag {
    &::before {
      content: "<";
    }

    &::after {
      content: ">";
    }
  }

  .marko-codespan__attribute::after {
    content: "=";
  }

  #syntax-legend pre {
    border: none;
    font-size: max(0.8rem, min(4dvw, 1.5rem));
    background-color: var(--section-color-dim);
    border-radius: 1rem;
    padding: 1.5rem;
    width: 100%;
    max-width: 100% !important;
  }

  .markdown-alert {
    position: relative;
    margin: 2rem 0;
    border: 1px solid var(--section-color);
    background-color: var(--color-background);
    padding: 1rem;
    padding-bottom: 0;
    border-radius: 1rem;
    min-height: 9rem;
    &::after {
      position: absolute;
      z-index: -1;
      inset: 0;
      transform-origin: bottom;
      transform: scale(0.9, 0.7);
      content: "";
      background-color: var(--section-color-dim-alt);
      filter: blur(50px);
      opacity: 0.2;
    }
    @media (min-width: 48rem) {
      padding: 1.5rem;
      padding-bottom: 1rem;
    }

    pre,
    code {
      margin: 1.3rem 0;
    }
  }

  .markdown-alert-title {
    color: var(--section-color);
    display: flex;
    gap: 0.5rem;
    align-items: center;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 0.7rem;

    svg {
      fill: currentColor;
    }
  }

  $alert-types: (
    ("note", "doc", "blue"),
    ("caution", "throw", "red"),
    ("tip", "link", "yellow"),
    ("important", "button", "green"),
    ("warning", "crash", "gray")
  );

  .markdown-alert::before {
    pointer-events: none;
    float: right;
    content: "";
    margin-top: -3.6rem;
    margin-right: -1.75rem;
    width: 8rem;
    height: 8rem;
    shape-margin: 1rem;
    shape-outside: var(--widget-image);
    background-image: var(--widget-image);
    background-repeat: no-repeat;
  }

  .markdown-alert-note::before {
    rotate: 4deg;
  }
  .markdown-alert-caution::before {
    rotate: -6deg;
  }
  .markdown-alert-tip::before {
    scale: -1 1;
    rotate: -5deg;
  }
  .markdown-alert-important::before {
    scale: -1 1;
    rotate: 3deg;
  }

  @each $name, $widget, $color in $alert-types {
    .markdown-alert-#{$name} {
      @include section-color.set($color, true);
      &::before {
        --widget-image: url("../../tags/widget/#{$widget}.svg");
      }
    }
  }

  @media (min-width: 48rem) and (min-height: 38rem) {
    .markdown-alert::before {
      width: 7.5rem;
      height: 11.25rem;
      margin-top: -4rem;
      margin-left: -1.5rem;
      margin-right: -1rem;
      rotate: 0deg;
    }

    @each $name, $widget in $alert-types {
      .markdown-alert-#{$name}::before {
        --widget-image: url("../../tags/widget/#{$widget}-legs.svg");
      }
    }
  }
}
