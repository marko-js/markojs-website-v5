@mixin section-colors($color) {
  --section-color-dark: var(--color-#{$color}-dark);
  --section-color-light: var(--color-#{$color}-light);
  --section-color-pale-dark: var(--color-#{$color}-pale-dark);
  --section-color-pale-light: var(--color-#{$color}-pale-light);
  --section-color-pale-primary: var(--color-#{$color}-pale-primary);
  --section-color-pale-secondary: var(--color-#{$color}-pale-secondary);

  @if $color == "red" {
    --section-color-primary: var(--color-red-light);
    --section-color-secondary: var(--color-red-dark);
  } @else {
    --section-color-primary: var(--color-#{$color}-primary);
    --section-color-secondary: var(--color-#{$color}-secondary);
  }
}

.doc {
  display: grid;

  @media (min-width: 48rem) {
    gap: 2.5rem;
    grid-template-columns: 12rem minmax(0, 1fr);
    grid-template-areas: "left main";
  }

  @media (min-width: 64rem) {
    grid-template-columns: 12rem minmax(0, 1fr) 12rem;
    grid-template-areas: "left main right";
  }
}

main {
  grid-area: main;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: var(--section-color-primary);
    margin-bottom: 1.3rem;
    & > a {
      &:hover {
        text-decoration: none;
      }
      &::before {
        content: "#";
        position: absolute;
        left: 0;
        opacity: 0;
        translate: -100%;
        padding-right: 0.3rem;
        color: var(--section-color-pale-secondary);
      }
    }

    &:hover,
    &:focus-within {
      & > a::before {
        opacity: 1;
      }
    }
  }
  h2 {
    margin-top: 3rem;
  }
  h3,
  h4,
  h5,
  h6 {
    margin-top: 2rem;
  }

  p {
    margin-bottom: 1.3rem;
  }

  ul,
  ol {
    margin-bottom: 1.3rem;
    padding-left: 1rem;
  }

  pre,
  code {
    margin: 2rem 0;
  }
}

.docNav,
.tocNav {
  flex-direction: column;
  font-size: 0.9rem;
  display: none;

  ul {
    display: flex;
    flex-direction: column;
    list-style-type: none;
  }

  li {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  a {
    color: var(--color-foreground);
    font-weight: 400;
    line-height: 1.6;

    &[aria-current="true"] {
      padding-left: 0.5rem;
      border-left: 2px solid var(--color-red-light);
    }
  }

  strong {
    font-weight: 500;
    text-transform: uppercase;
    color: var(--color-red-light);
  }
}

.docNav {
  grid-area: left;
  gap: 1rem;
  @media (min-width: 48rem) {
    display: flex;
  }

  > ul {
    gap: 1rem;
  }

  .docNavControls {
    display: flex;
    gap: 0.5rem;
    flex-direction: column;

    strong {
      color: var(--color-foreground);
      font-weight: 700;
    }
  }
}

.tocNav {
  grid-area: right;
  @media (min-width: 64rem) {
    display: flex;
  }

  & ul ul {
    padding-left: 1rem;
  }
}

h1 {
  $i: 1;
  @each $color in "red", "blue", "yellow", "green", "purple" {
    & ~ section:nth-of-type(5n + #{$i}) {
      @include section-colors($color);
    }
    $i: $i + 1;
  }
}

:global(.marko-codespan__tag) {
  &::before {
    content: "<";
  }

  &::after {
    content: ">";
  }
}

:global(.marko-codespan__attribute) {
  &::after {
    content: "=";
  }
}

/* Alerts */

:global(.markdown-alert) {
  margin: 2rem 0;
  border-left: 4px solid var(--section-color-primary);
  padding: 0 1rem;
}

:global(.markdown-alert-title) {
  color: var(--section-color-primary);
  display: flex;
  gap: 0.5rem;
  align-items: center;

  svg {
    fill: currentColor;
  }
}


@each $name, $color in (
  "caution": "red",
  "note": "blue",
  "tip": "yellow",
  "important": "green",
  "warning": "purple"
) {
  :global(.markdown-alert-#{$name}) {
    @include section-colors($color);
  }
}

/* Contributors */

hr {
  border-color: #888;
  margin: 3rem 0;
}

#contributors ul {
  display: flex;
  list-style-type: none;
  flex-wrap: wrap;
  gap: 1rem;
  padding: 0;
}

#contributors ul > li > a {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-decoration: none;
  color: var(--color-foreground);
  font-size: x-small;
}

#contributors ul > li > a > :first-child {
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
  border: 2px solid var(--section-color-primary);
  display: flex;
  justify-content: center;
  align-items: center;

  svg {
    height: 2rem;

    path {
      fill: var(--section-color-primary);
    }
  }
}
