@use "../vars" as *;

:root {
  color-scheme: light dark;

  --color-black: #{$color-black};
  --color-white: #{$color-white};
  --color-blue-dark: #{$color-blue-dark};
  --color-blue-light: #{$color-blue-light};
  --color-green-dark: #{$color-green-dark};
  --color-green-light: #{$color-green-light};
  --color-yellow-dark: #{$color-yellow-dark};
  --color-yellow-light: #{$color-yellow-light};
  --color-red-dark: #{$color-red-dark};
  --color-red-light: #{$color-red-light};

  --color-blue-dark-shade: #{$color-blue-dark-shade};
  --color-blue-dark-tint: #{$color-blue-dark-tint};
  --color-blue-light-shade: #{$color-blue-light-shade};
  --color-blue-light-tint: #{$color-blue-light-tint};
  --color-green-dark-shade: #{$color-green-dark-shade};
  --color-green-dark-tint: #{$color-green-dark-tint};
  --color-green-light-shade: #{$color-green-light-shade};
  --color-green-light-tint: #{$color-green-light-tint};
  --color-yellow-dark-shade: #{$color-yellow-dark-shade};
  --color-yellow-dark-tint: #{$color-yellow-dark-tint};
  --color-yellow-light-shade: #{$color-yellow-light-shade};
  --color-yellow-light-tint: #{$color-yellow-light-tint};
  --color-red-dark-shade: #{$color-red-dark-shade};
  --color-red-dark-tint: #{$color-red-dark-tint};
  --color-red-light-shade: #{$color-red-light-shade};
  --color-red-light-tint: #{$color-red-light-tint};

  --color-selection-background: var(--color-red-alt);
  --color-selection-foreground: var(--color-red);

  --color-background: light-dark(var(--color-white), var(--color-black));
  --color-foreground: light-dark(var(--color-black), var(--color-white));
  @each $color in "red", "yellow", "green", "blue" {
    --color-#{$color}: light-dark(
      var(--color-#{$color}-dark),
      var(--color-#{$color}-light)
    );
    --color-#{$color}-alt: light-dark(
      var(--color-#{$color}-light),
      var(--color-#{$color}-dark)
    );
    --color-#{$color}-dim: light-dark(
      var(--color-#{$color}-dark-tint),
      var(--color-#{$color}-light-shade)
    );
    --color-#{$color}-dim-alt: light-dark(
      var(--color-#{$color}-light-shade),
      var(--color-#{$color}-dark-tint)
    );

    --color-#{$color}-alt-dim: light-dark(
      var(--color-#{$color}-light-tint),
      var(--color-#{$color}-dark-shade)
    );
    --color-#{$color}-alt-dim-alt: light-dark(
      var(--color-#{$color}-dark-shade),
      var(--color-#{$color}-light-tint)
    );
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  position: relative;
  font-weight: 500;
  overflow-wrap: break-word;
  text-wrap: balance;
}

h1 {
  font-size: 3rem;
  margin-top: -0.5rem;
  @media (min-width: 90rem) {
    font-size: 4.5rem;
    margin-top: -1rem;
  }
}

h2 {
  font-size: 2.2rem;
  @media (min-width: 90rem) {
    font-size: 2.8rem;
  }
}

h3 {
  font-size: 1.8rem;
  @media (min-width: 90rem) {
    font-size: 2rem;
  }
}

h4 {
  font-size: 1.2rem;
  @media (min-width: 90rem) {
    font-size: 1.6rem;
  }
}

p {
  overflow-wrap: break-word;
  text-wrap: pretty;
}

::selection {
  background-color: var(--color-selection-background);
  color: var(--color-selection-foreground);
  filter: contrast(200%);
}

html,
body {
  min-height: 100%;
}

body {
  background-color: var(--color-background);
  color: var(--color-foreground);
  -webkit-font-smoothing: antialiased;
  font-family:
    Ubuntu,
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    Roboto,
    Oxygen,
    Cantarell,
    "Open Sans",
    "Helvetica Neue",
    sans-serif;
}

a {
  color: var(--section-color);
  text-decoration: underline var(--section-color) solid 1px;
  text-underline-offset: 40%;
  &:hover {
    text-underline-offset: calc(40% - 2px);
    text-decoration-thickness: 3px;
    text-decoration-line: underline;
  }
}

nav,
h1,
h2,
h3,
h4,
h5,
h5 {
  a {
    text-decoration-line: none;
  }
}

pre {
  padding: 0 1rem;
  overflow-x: auto;
  border-left: 4px solid var(--section-color-dim);
}

code {
  font-family:
    "Ubuntu Mono",
    monaco,
    Consolas,
    Lucida Console,
    monospace;
  line-height: 1.5;
  text-wrap: nowrap;

  :not(pre) > & {
    color: var(--section-color);
    background-color: var(--section-color-dim);
    border-radius: 1rem;
    padding: 0.2rem 0rem;
    line-height: 1.8;

    &::before,
    &::after {
      content: " ";
      white-space: pre;
    }
  }
}

.grid {
  display: grid;
  grid-template-areas:
    "top"
    "main";
  grid-template-rows: var(--header-height) auto;
  grid-template-columns: minmax(0, 1fr);
  padding: 0 1rem;
  column-gap: 1.5rem;

  @media (min-width: 48rem) {
    grid-template-areas:
      "top top"
      "left main";
    grid-template-columns: 12rem minmax(0, 1fr);
  }

  @media (min-width: 64rem) {
    grid-template-areas:
      "top top top"
      "left main right";
    column-gap: 2.5rem;
    padding: 0 2.5rem;
    grid-template-columns: 12rem minmax(0, 1fr) 12rem;
  }
}

.root {
  position: relative;
  max-width: 90rem;
  margin: 0 auto;
  composes: grid;
}

main {
  padding-top: 2.5rem;
  grid-column: 1 / -1;
  grid-row: 2 / 3;
}