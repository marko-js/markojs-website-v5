server import { createHighlighter } from "shiki";
server import { markoDark, markoLight } from "./theme"
import { faUpRightFromSquare } from "@fortawesome/free-solid-svg-icons";
import { compress } from "../../routes/playground/tags/hasher";

import type { PlaygroundFile } from "../playground/playground.marko";
export interface Input {
  lang: string;
  text: string;
  concise?: string;
  filename?: string;
}
server const highlighter = await createHighlighter({
  langs: ["marko", "html", "css", "js", "ts", "json", "fs", "sh"],
  themes: [markoDark, markoLight],
});

const/highlightedText=highlighter.codeToHtml(input.text, {
  lang: input.lang,
  themes: {
    light: "marko-light",
    dark: "marko-dark"
  }
})

const/highlightedConcise=input.concise &&
  highlighter.codeToHtml(input.concise, {
    lang: input.lang,
    themes: {
      light: "marko-light",
      dark: "marko-dark"
    }
  })

if=input.filename
  div.filename -- ${input.filename}
if=input.concise
  div.code-block-mode-toggle
    await|hash|=compress(JSON.stringify([{ path: "index.marko", content: input.text } as PlaygroundFile]))
      a.code-block-action href=`/playground/#${hash}` title="View in playground"
        fa-icon=faUpRightFromSquare
    div.html -- $!{highlightedText}
    div.concise -- $!{highlightedConcise}
else
  -- $!{highlightedText}
